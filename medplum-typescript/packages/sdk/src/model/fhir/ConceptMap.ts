import { code } from "./code";
import { CodeableConcept } from "./CodeableConcept";
import { ConceptmapStatus } from "./ConceptmapStatus";
import { ConceptMap_Group } from "./ConceptMap_Group";
import { ContactDetail } from "./ContactDetail";
import { dateTime } from "./dateTime";
import { Extension } from "./Extension";
import { id } from "./id";
import { Identifier } from "./Identifier";
import { markdown } from "./markdown";
import { Meta } from "./Meta";
import { Narrative } from "./Narrative";
import { ResourceList } from "./ResourceList";
import { uri } from "./uri";
import { UsageContext } from "./UsageContext";

export interface ConceptMap {
    resourceType: string;
    id: id | null | undefined;
    meta: Meta | null | undefined;
    implicitRules: uri | null | undefined;
    language: code | null | undefined;
    text: Narrative | null | undefined;
    contained: ResourceList[] | null | undefined;
    extension: Extension[] | null | undefined;
    modifierExtension: Extension[] | null | undefined;
    url: uri | null | undefined;
    identifier: Identifier | null | undefined;
    version: string | null | undefined;
    name: string | null | undefined;
    title: string | null | undefined;
    status: ConceptmapStatus | null | undefined;
    experimental: boolean | null | undefined;
    date: dateTime | null | undefined;
    publisher: string | null | undefined;
    contact: ContactDetail[] | null | undefined;
    description: markdown | null | undefined;
    useContext: UsageContext[] | null | undefined;
    jurisdiction: CodeableConcept[] | null | undefined;
    purpose: markdown | null | undefined;
    copyright: markdown | null | undefined;
    sourceUri: string | null | undefined;
    sourceCanonical: string | null | undefined;
    targetUri: string | null | undefined;
    targetCanonical: string | null | undefined;
    group: ConceptMap_Group[] | null | undefined;
}
