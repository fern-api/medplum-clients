"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.runRuleOnPackage = void 0;
const mrlint_commons_1 = require("@fern-api/mrlint-commons");
const posix_1 = __importDefault(require("path/posix"));
async function runRuleOnPackage({ monorepo, packageToLint, rule, fileSystems, logger, addDevDependency, }) {
    const relativePathToRoot = posix_1.default.relative(posix_1.default.join(monorepo.root.fullPath, packageToLint.relativePath), monorepo.root.fullPath);
    logger.debug("Running rule...");
    let result = mrlint_commons_1.Result.success();
    try {
        result = await rule.run({
            packageToLint,
            allPackages: monorepo.packages,
            relativePathToRoot,
            relativePathToSharedConfigs: posix_1.default.join(relativePathToRoot, monorepo.root.config.sharedConfigs),
            fileSystems,
            logger,
            addDevDependency,
            ruleConfig: packageToLint.config.rules[rule.ruleId],
        });
    }
    catch (error) {
        logger.error({
            message: "Encountered exception when running rule",
            error,
        });
        result.fail();
    }
    logger.debug("Done running rule.");
    return result;
}
exports.runRuleOnPackage = runRuleOnPackage;
//# sourceMappingURL=runRuleOnPackage.js.map