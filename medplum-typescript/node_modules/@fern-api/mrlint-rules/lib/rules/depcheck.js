"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DepcheckRule = void 0;
const mrlint_commons_1 = require("@fern-api/mrlint-commons");
const writePackageFile_1 = require("../utils/writePackageFile");
exports.DepcheckRule = {
    ruleId: "depcheck",
    type: mrlint_commons_1.RuleType.PACKAGE,
    targetedPackages: [
        mrlint_commons_1.PackageType.REACT_APP,
        mrlint_commons_1.PackageType.REACT_LIBRARY,
        mrlint_commons_1.PackageType.TYPESCRIPT_LIBRARY,
        mrlint_commons_1.PackageType.TYPESCRIPT_CLI,
    ],
    run: runRule,
};
async function runRule({ fileSystems, packageToLint, logger, ruleConfig, }) {
    const depcheckRc = {
        ignores: ["@types/jest", "@types/node"],
        "ignore-patterns": ["lib"],
    };
    if (packageToLint.config.type === mrlint_commons_1.PackageType.REACT_APP) {
        depcheckRc.ignores.push("sass");
    }
    const castedRuleConfig = (0, mrlint_commons_1.getRuleConfig)(ruleConfig);
    if (castedRuleConfig != null) {
        if (castedRuleConfig["ignore-patterns"] != null) {
            depcheckRc["ignore-patterns"].push(...castedRuleConfig["ignore-patterns"]);
        }
        if (castedRuleConfig["ignores"] != null) {
            depcheckRc["ignores"].push(...castedRuleConfig["ignores"]);
        }
    }
    return (0, writePackageFile_1.writePackageFile)({
        fileSystem: fileSystems.getFileSystemForPackage(packageToLint),
        filename: ".depcheckrc.json",
        contents: JSON.stringify(depcheckRc),
        logger,
    });
}
//# sourceMappingURL=depcheck.js.map