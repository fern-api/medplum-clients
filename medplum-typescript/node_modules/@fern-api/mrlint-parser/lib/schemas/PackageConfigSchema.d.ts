import { z } from "zod";
export declare const PackageConfigSchema: z.ZodUnion<[z.ZodObject<z.extendShape<{
    private: z.ZodDefault<z.ZodOptional<z.ZodBoolean>>;
    rules: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
}, {
    type: z.ZodDefault<z.ZodOptional<z.ZodLiteral<"custom">>>;
}>, "strict", z.ZodTypeAny, {
    rules?: Record<string, unknown> | undefined;
    type: "custom";
    private: boolean;
}, {
    type?: "custom" | undefined;
    private?: boolean | undefined;
    rules?: Record<string, unknown> | undefined;
}>, z.ZodObject<z.extendShape<{
    private: z.ZodDefault<z.ZodOptional<z.ZodBoolean>>;
    rules: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
}, {
    type: z.ZodLiteral<"react-app">;
}>, "strict", z.ZodTypeAny, {
    rules?: Record<string, unknown> | undefined;
    type: "react-app";
    private: boolean;
}, {
    private?: boolean | undefined;
    rules?: Record<string, unknown> | undefined;
    type: "react-app";
}>, z.ZodObject<z.extendShape<{
    private: z.ZodDefault<z.ZodOptional<z.ZodBoolean>>;
    rules: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
}, {
    type: z.ZodLiteral<"react-library">;
}>, "strict", z.ZodTypeAny, {
    rules?: Record<string, unknown> | undefined;
    type: "react-library";
    private: boolean;
}, {
    private?: boolean | undefined;
    rules?: Record<string, unknown> | undefined;
    type: "react-library";
}>, z.ZodObject<z.extendShape<{
    private: z.ZodDefault<z.ZodOptional<z.ZodBoolean>>;
    rules: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
}, {
    type: z.ZodLiteral<"library">;
}>, "strict", z.ZodTypeAny, {
    rules?: Record<string, unknown> | undefined;
    type: "library";
    private: boolean;
}, {
    private?: boolean | undefined;
    rules?: Record<string, unknown> | undefined;
    type: "library";
}>, z.ZodObject<z.extendShape<{
    private: z.ZodDefault<z.ZodOptional<z.ZodBoolean>>;
    rules: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
}, {
    type: z.ZodLiteral<"cli">;
    cliName: z.ZodOptional<z.ZodString>;
    pathToCli: z.ZodDefault<z.ZodOptional<z.ZodString>>;
}>, "strict", z.ZodTypeAny, {
    rules?: Record<string, unknown> | undefined;
    cliName?: string | undefined;
    type: "cli";
    private: boolean;
    pathToCli: string;
}, {
    private?: boolean | undefined;
    rules?: Record<string, unknown> | undefined;
    cliName?: string | undefined;
    pathToCli?: string | undefined;
    type: "cli";
}>]>;
