"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.defaultFetcher = void 0;
const node_fetch_1 = __importStar(require("node-fetch"));
const url_1 = require("url");
const defaultFetcher = async (args) => {
    const headers = new node_fetch_1.Headers(args.headers);
    headers.append("Content-Type", "application/json");
    if (args.token != null) {
        const token = typeof args.token === "string" ? args.token : args.token();
        headers.append("Authorization", `Bearer ${token}`);
    }
    const url = new url_1.URL(args.url);
    if (args.queryParameters != null) {
        url.search = args.queryParameters.toString();
    }
    const fetchResponse = await (0, node_fetch_1.default)(url.toString(), {
        method: args.method,
        headers,
        body: args.body != null ? JSON.stringify(args.body) : undefined,
    });
    return {
        statusCode: fetchResponse.status,
        body: await fetchResponse.json(),
    };
};
exports.defaultFetcher = defaultFetcher;
//# sourceMappingURL=defaultFetcher.js.map