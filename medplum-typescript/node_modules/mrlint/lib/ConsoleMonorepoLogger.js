"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConsoleMonorepoLogger = void 0;
const mrlint_commons_1 = require("@fern-api/mrlint-commons");
const ConsoleMessage_1 = require("./ConsoleMessage");
class ConsoleMonorepoLogger {
    constructor(maxLevel) {
        this.maxLevel = maxLevel;
        this.getLogger = () => {
            return this.getLoggerWithDefaultMetadata();
        };
        this.getLoggerForPackage = (p) => {
            return this.getLoggerWithDefaultMetadata({
                package: p,
            });
        };
        this.getLoggerForRule = (args) => {
            return this.getLoggerWithDefaultMetadata({
                package: args.package,
                rule: args.rule,
            });
        };
    }
    getLoggerWithDefaultMetadata(defaultMetadata = {}) {
        return {
            error: (args) => {
                const message = new ConsoleMessage_1.ConsoleMessage(Object.assign(Object.assign({}, defaultMetadata), { title: typeof args === "string" ? args : args.message, error: typeof args !== "string" ? args.error : undefined, additionalContent: typeof args !== "string" ? args.additionalContent : undefined, level: mrlint_commons_1.LogLevel.ERROR, maxLevel: this.maxLevel }));
                message.print();
            },
            warn: (args) => {
                const message = new ConsoleMessage_1.ConsoleMessage(Object.assign(Object.assign({}, defaultMetadata), { title: typeof args === "string" ? args : args.message, additionalContent: typeof args !== "string" ? args.additionalContent : undefined, level: mrlint_commons_1.LogLevel.WARN, maxLevel: this.maxLevel }));
                message.print();
            },
            info: (args) => {
                const message = new ConsoleMessage_1.ConsoleMessage(Object.assign(Object.assign({}, defaultMetadata), { title: typeof args === "string" ? args : args.message, additionalContent: typeof args !== "string" ? args.additionalContent : undefined, level: mrlint_commons_1.LogLevel.INFO, maxLevel: this.maxLevel }));
                message.print();
            },
            debug: (args) => {
                const message = new ConsoleMessage_1.ConsoleMessage(Object.assign(Object.assign({}, defaultMetadata), { title: typeof args === "string" ? args : args.message, additionalContent: typeof args !== "string" ? args.additionalContent : undefined, level: mrlint_commons_1.LogLevel.DEBUG, maxLevel: this.maxLevel }));
                message.print();
            },
            log: (args, level = mrlint_commons_1.LogLevel.INFO) => {
                const message = new ConsoleMessage_1.ConsoleMessage(Object.assign(Object.assign({}, defaultMetadata), { title: typeof args === "string" ? args : args.message, additionalContent: typeof args !== "string" ? args.additionalContent : undefined, level, maxLevel: this.maxLevel }));
                message.print();
            },
            newline: () => {
                console.log();
            },
        };
    }
}
exports.ConsoleMonorepoLogger = ConsoleMonorepoLogger;
//# sourceMappingURL=ConsoleMonorepoLogger.js.map